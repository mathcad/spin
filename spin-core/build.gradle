description = '核心模块'
version = '2.1.10.RELEASE'
def artifactId = 'spin-core'

apply plugin: 'org.junit.platform.gradle.plugin'

buildscript {
    repositories {
        mavenLocal()
        maven { url = 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    }
}

ext {
    junitJupiterVersion = '5.2.0'
    slf4jVersion = '1.7.25'
    gsonVersion = '2.8.5'
    asmVersion = '6.2.1'
    httpclientVersion = '4.5.6'
    httpasyncclientVersion = '4.1.4'
    commonsNetVersion = '3.6'
    pinyin4jVersion = '2.5.1'
    dom4jVersion = '1.6'
    poiVersion = '3.17'
    bouncyVersion = '1.59'
}

junitPlatform {
    // platformVersion '1.0.1'
//    filters {
//        engines {
//            // include 'junit-jupiter', 'junit-vintage'
//            // exclude 'custom-engine'
//        }
//        tags {
//            // include 'fast'
//            exclude 'slow'
//        }
//        // includeClassNamePattern '.*Test'
//    }
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager = 'java.util.logging.LogManager'
}

// 关闭java8 javadoc检查
//if (JavaVersion.current().isJava8Compatible()) {
//    tasks.withType(Javadoc) {
//        options.addStringOption('Xdoclint:none', '-quiet')
//    }
//}

install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$artifactId"
        pom.groupId = "$project.group"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "http://192.168.0.248:8081/nexus/content/repositories/releases/") {
                authentication(userName: "admin", password: "admin123")
            }
            pom.version = "$project.version"
            pom.artifactId = "$artifactId"
            pom.groupId = "$project.group"
        }
    }
}

dependencies {
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
    testRuntime group: 'org.apache.poi', name: 'poi-scratchpad', version: poiVersion
    testRuntime(group: 'org.apache.poi', name: 'poi-excelant', version: poiVersion) {
        exclude(module: 'ant')
    }
    testCompile group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: httpasyncclientVersion
    testRuntime group: 'org.apache.httpcomponents', name: 'httpclient', version: httpclientVersion
    testRuntime group: 'dom4j', name: 'dom4j', version: dom4jVersion

//    testCompile group: 'org.springframework', name: 'spring-test', version: springVersion

//    core
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'com.google.code.gson', name: 'gson', version: gsonVersion
    compile group: 'org.ow2.asm', name: 'asm', version: asmVersion

//    compileOnly group: 'org.apache.httpcomponents', name: 'httpclient', version: httpclientVersion
    compileOnly group: 'org.apache.httpcomponents', name: 'httpasyncclient', version: httpasyncclientVersion

    compileOnly group: 'commons-net', name: 'commons-net', version: commonsNetVersion
    compileOnly group: 'com.belerweb', name: 'pinyin4j', version: pinyin4jVersion
    compileOnly group: 'dom4j', name: 'dom4j', version: dom4jVersion
    compileOnly(group: 'org.apache.poi', name: 'poi-excelant', version: poiVersion) {
        exclude(module: 'ant')
    }
    compileOnly group: 'org.apache.poi', name: 'poi-scratchpad', version: poiVersion
    compileOnly group: 'org.bouncycastle', name: 'bcprov-ext-jdk15on', version: bouncyVersion
}
