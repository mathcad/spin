plugins {
    id 'java-library'
}

description = '数据访问模块, 基于Hibernate的实现'
version = '2.2.30-SNAPSHOT'
def artifactId = 'spin-data'

test {
    useJUnitPlatform()
}

install {
    repositories.mavenInstaller {
        pom.version = "$project.version"
        pom.artifactId = "$artifactId"
        pom.groupId = "$project.group"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: repoSnapUrl) {
                authentication(userName: repoUser, password: repoPasswd)
            }
            pom.groupId = "$project.group"
            pom.artifactId = "$artifactId"
            pom.version = "$project.version"
        }
    }
}

dependencies {
    // additional for Intellij
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitLauncherVersion
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitJupiterVersion

    // test runtime
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion

//    data
    api(project(":spin-data-core"))

    api group: 'org.springframework', name: 'spring-context', version: springVersion
    api group: 'org.springframework', name: 'spring-orm', version: springVersion
    api group: 'org.springframework', name: 'spring-oxm', version: springVersion
    api group: 'org.springframework', name: 'spring-tx', version: springVersion
    api group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
    api group: 'javax.transaction', name: 'javax.transaction-api', version: transactionApiVersion
}
