plugins {
    id 'java-library'
}

description '公共通用组件starter'
version '2.4.0-SNAPSHOT'

test {
    useJUnitPlatform()
}

publishing  {
    publications  {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
        }
    }

    repositories {
        maven {
            name = "mathcat"
            url = version.endsWith("-SNAPSHOT") ? repoSnapUrl : repoReleaseUrl
            allowInsecureProtocol = true
            credentials {
                username = repoUser
                password = repoPasswd
            }
        }
    }
}

dependencies {
    // additional for Intellij
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: junitLauncherVersion
    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: junitJupiterVersion

    // test runtime
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion

    api group: 'org.mathcat', name: 'spin-web', version: '2.4.0-SNAPSHOT'
    api group: 'org.mathcat', name: 'spin-data-core', version: '2.4.0-SNAPSHOT'

    api group: 'org.springframework', name: 'spring-context-support', version: springVersion
    api group: 'org.springframework', name: 'spring-aspects', version: springVersion
    api group: 'org.springframework.kafka', name: 'spring-kafka', version: springKafkaVersion

    api group: 'org.springframework.boot', name: 'spring-boot', version: springBootVersion
    api group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion
    api group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion
    api group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion

    api group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: springCloudVersion
    api group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: springCloudVersion
//    compileOnly group: 'org.springframework.cloud', name: 'spring-cloud-loadbalancer', version: springCloudVersion

    api group: 'com.alibaba.cloud', name: 'spring-cloud-starter-alibaba-sentinel', version: sentinelStarterVersion

    api group: 'com.ctrip.framework.apollo', name: 'apollo-client', version: apolloVersion
    api group: 'com.github.xiaoymin', name: 'knife4j-spring-boot-autoconfigure', version: knife4jVersion
    api group: 'p6spy', name: 'p6spy', version: p6spyVersion
    api group: 'org.apache.httpcomponents', name: 'httpmime', version: httpclientVersion
    api group: 'io.github.openfeign', name: 'feign-httpclient', version: feignHttpVersion
    api group: 'javax.validation', name: 'validation-api', version: validationVersion
    api group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: prometheusVersion
    api group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.0'

    api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    compileOnly group: 'io.seata', name: 'seata-all', version: seataVersion
    compileOnly group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: springBootVersion
    compileOnly group: 'org.springframework', name: 'spring-webmvc', version: springVersion
    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: servletVersion
}
